#!/usr/bin/env python

import os
import sys
import copy
import subprocess
import string
import glob

def usage(error=None):
    print "Usage: %s <command> [args...]" % sys.argv[0]
    print "commands:"
    print "  create <data dir>        setup <data dir>"
    print "  migrate                  initialize database"
    print "  pgpool                   run pgpool"
    print "  postgres -D <data dir>   run postgres"
    print ""
    if error is not None:
        print error
    exit(1)

def search_postgres_command(name):
    # Python 2.6 doesn't has subprocess.check_output method
    process = subprocess.Popen("which " + name, shell=True, stdout=subprocess.PIPE)
    output, unused_err = process.communicate()
    retcode = process.poll()
    if retcode == 0:
        return string.rstrip(output)
    else:
        # Debian/Ubuntu doesn't have initidb in PATH
        debian_paths = glob.glob("/usr/lib/postgresql/*/bin/"+name)
        if debian_paths:
            return sorted(debian_paths)[0]  # sort to use the latest version
        else:
            return name

def run_command(cmd, **kwargs):
    print " ".join(cmd)
    subprocess.call(cmd, **kwargs)

def exec_command(cmd):
    print " ".join(cmd)
    os.execvp(cmd[0], cmd)

if len(sys.argv) <= 1:
    usage()
args = copy.copy(sys.argv)
prog = args.pop(0)
command = args.pop(0)

if command == "create":
    if len(args) <= 0:
        usage("Argument <data dir> is missing")
    data_dir = args[0]

    if os.path.exists(data_dir):
        print "'%s' already exists" % (data_dir)
        exit(1)

    initdb_path = search_postgres_command("initdb")
    cmd = [initdb_path, "-U", "prestogres", "--no-locale", "-E", "UNICODE"] + args
    run_command(cmd)
    with open("/usr/local/share/prestogres/postgresql.conf") as conf:
        with open(data_dir + "/postgresql.conf", "a") as pgconf:
            pgconf.write(conf.read())
    print ""
    print "Next steps to start Prestogres:"
    print ""
    print "  1. start postgres:"
    print "     $ %s postgres -D '%s'" % (prog, data_dir)
    print ""
    print "  2. open another terminal, and initialize the database:"
    print "     $ %s migrate" % (prog)
    print ""
    print "  3. start pgpool"
    print "     $ %s pgpool" % (prog)
    print ""
    print "  4. connect"
    print "     $ psql -h 127.0.0.1 -p 5439 -U presto_user default"
    print ""
    print "Configuration files are at:"
    print ""
    print "  * postgres: %s/postgresql.conf" % (data_dir)
    print "  * pgpool: /usr/local/etc/informix.conf"
    print ""

elif command == "migrate":
    run_command(["psql -h 127.0.0.1 -U prestogres postgres < '/usr/local/share/prestogres/setup.sql'"], shell=True)

elif command == "pgpool":
    dirname = os.path.dirname(prog)
    if dirname == '':
        path = "prestogres-pgpool"
    else:
        path = dirname + "/prestogres-pgpool"
    cmd = [path, "-n"] + args
    exec_command(cmd)

elif command == "postgres":
    if len(args) <= 1:
        usage()
    postgres_path = search_postgres_command("postgres")
    cmd = ["env", "PYTHONPATH=/usr/local/share/prestogres", postgres_path] + args
    exec_command(cmd)

else:
    usage("Unknown command '%s'" % command)

